## 📋 Table of Contents

- [🧠 Summary](#🧠-summary)
- [📄 Problem Statement](#📄-problem-statement)
- [🔎 Approach 1](#🔎-approach-1)
- [⚙️ Approach 2 (if any)](#⚙️-approach-2-if-any)
- [📚 DSA Concepts Explained](#📚-dsa-concepts-explained)
- [🧪 Test Cases](#🧪-test-cases)
- [🧱 Interview Walkthrough (CLEAN)](#🧱-interview-walkthrough-clean)
- [❌ Common Pitfalls](#❌-common-pitfalls)
- [📚 Glossary](#📚-glossary)

---

## 🧠 Summary

- Brief 2-4 bullet summary of the problem and key idea
- What data structures or algorithms are involved?
- Time/space tradeoffs

**Best Solution:**&#x20;

- One-liner why this is optimal

---

## 📄 Problem Statement

[LeetCode Link](insert-leetcode-url)

> Restate the problem in plain English

**Constraints:**

-

---

## 🔎 Approach 1:&#x20;

### 🧠 Idea (What’s Going On)

- Short learner-friendly explanation
- Steps in plain language

**Time Complexity:** `O(...)`\
**Space Complexity:** `O(...)`

```python
# Paste solution with helpful comments and structure
```

> 🧠 Tip: Add reasons for choices (e.g., why sort, why dict, etc.)

---

## ⚙️ Approach 2 (if any):&#x20;

### 🧠 Idea

- Alternate idea explanation

**Time Complexity:** `O(...)`\
**Space Complexity:** `O(...)`

```python
# Paste code and describe each step
```

> 🕵️‍♂️ When this approach is better/worse

---

## 📚 DSA Concepts Explained

(Add more as needed)

---

## 🧪 Test Cases

```python
assert Solution().fn(...) == ...
# Add diverse edge and normal cases
```

---

## 🧱 Interview Walkthrough (CLEAN)

### 🔍 1. Clarify

- Assumptions, input/output, edge cases

### 🔬 2. Examples

- Provided + 1-2 of your own

### 💡 3. Brainstorm

- Naive vs optimized ideas

### 🧰 4. Plan

- Step-by-step breakdown before coding

### 🧠 5. Complexity

- Time and space discussion

### ✅ 6. Wrap-up

- Recap strengths, edge case coverage, invite follow-ups

---

## ❌ Common Pitfalls

- What people often get wrong
- Subtle edge cases or traps

---

## 📚 Glossary

| Term          | Meaning |
| ------------- | ------- |
| Hash Map      | ...     |
| Tuple         | ...     |
| Min Heap      | ...     |
| Frequency Map | ...     |


